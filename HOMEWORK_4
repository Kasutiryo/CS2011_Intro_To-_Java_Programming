Problem 01: Software Sales (5 points)

A software company sells various products at various prices.  The company also offers discounts to clients who buy a
certain quantity of their products.  The discounts are listed in the table below:

Quantity	Discount
10-19	20%
20-49	30%
50-99	40%
100 or more	50%
Write a program which does the following:

Ask the user for the price of the piece of software.
Ask the user for the number of units sold.
Compute and display the total cost of the purchase.
Input Validation: The price and quantity cannot be negative.

Sample Output

Enter the cost of the software: 59.99
Enter the quantity sold: 57

Total Cost: $2051.658
Problem 02: Random Card (5 points)

Write a program that generates a random card from the standard deck of 52 cards.  You should show which rank
(Ace, 2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King) and the suit (Clubs, Diamonds, Hearts, Spades).

Requirements:

Program must use switch statements.  No if statements are allowed.
The output must match the sample exactly.  (Rank and suit will obviously be random, but the wording and formatting must match.)
Ace, Jack Queen, King, Clubs, Diamonds, Hearts, Spades; must use the word NOT the number.
Sample Output 1:

You picked the Ace of Clubs
Sample Output 2:

You picked the 2 of Hearts
Problem 03: Zeller's Congruence Algorithm (5 points)

Christian Zeller developed an algorithm that can compute the day of the week.  The algorithm is as follows:

h=(q+26(m+1)10+k+k4+j4+5j)mod7h=(q+26(m+1)10+k+k4+j4+5j)mod7

Where:

h is the day of the week (0: Saturday, 1: Sunday, 2: Monday, 3: Tuesday, 4: Wednesday, 5: Thursday, 6: Friday)
q is the day of the month
m is the month (3: March, 4: April, ..., 12: December), January and February are counted as months 13 and 14 of the previous year.
j is the century (i.e. year / 100)
k is the year of the century (i.e. year % 100).
NOTE: The formula performs integer division.

Write a program that prompts the user to enter a year, month, and day of the month, and displays the name of the day of the week.

HINT: January and February are counted as 13 and 14 in the formula, so you need to convert the user input 1 to 13 and 
the user input 2 to 14, and change the year to the previous year.

Input Validation:

The year, month, and day of the month cannot be negative.
The month must be a value [1, 12].
The day of the month must be a value [1, 31].
Requirements:

When determining which day of the week to print in the output, you must use switch statements to make this decision.  
You may use if/else structures for any other decision in this problem.
Sample Output 1:

Enter year (i.e. 2012): 2015
Enter month (1-12): 1
Enter the day of the month 25

The day of the week is Sunday.
Sample Output 2:

Enter year (i.e. 2012): 2012
Enter month (1-12): 5
Enter the day of the month 12

The day of the week is Saturday.
Problem 04: Menu-Driven Geometry Calculator (10 points)

Write a program that displays the following menu:

1. Compute the Surface Area of a Sphere
2. Compute the Volume of a Sphere
3. Compute the Surface Area of a Rectangular Prism
4. Compute the Volume of a Rectangular Prism
5. Exit the Program
You will need the following formulas:

Surface Area of a Sphere: 4πr24πr2
Volume of a Sphere: 43πr343πr3

r is the radius
Surface Area of a Rectangular Prism: 2LW+2HW+2LH2LW+2HW+2LH
Volume of a Rectangular Prism: LWHLWH

L is the length
W is the width
H is the height
Ask the user for their menu choice and then prompt the user for the radius if they choose options 1 or 2, or prompt 
them for the length, width, and height, if they choose option 3 and 4.  Display the results for the chosen operation.

Input Validation:

The menu choice cannot be negative.
The menu choice must be a value [1, 5].
The radius, length, width, and height, cannot be negative.
Requirements:

You must use a switch statement to implement the menu choices.
You may use if/else statements for the validation.
You must implement the text of your menu as a String constant (refer to the code examples for lecture 4).
You must implement your menu options as integer constants (refer to the code examples for lecture 4).
Problem 05: Internet Service Cost (10 points)

An internet service provide offers three different subscription packages:

Package 1: $15.95 a month for up to 10 hours of service.  Additional hours are $2.00 per hour.
Package 2: $20.95 a month for up to 20 hours of service.  Additional hours are $1.00 per hour.
Package 3: $30.99 per month unlimited access.
Write a program which does the following:

Ask the user which plan they have.
Ask the user for the month number (1-12) of which month they are being billed.
Ask the user how many hours they used.
Display the cost of their bill.
Also display how much money Package 1 customers would would have saved if they purchased packages 2 or 3, and how much 
money Package 2 customers would have saved if they purchased Package 3. If there were no savings, do not display this message.
Input Validation:

The plan number cannot be negative.
The plan number must be a value [1, 3].
The number of hours cannot be negative.
The number of hours cannot exceed the total number of hours for a given month.  Months with 30 days have 720 hours, 
months with 31 days have 744 hours, February with 28 days has 672 hours (don't worry about leap years).  Validate that 
the user does not enter a value greater than the total hours for a given month.  See the table below.
Month	Days	Hours
January	31	744
February	28	672
March	31	744
April	30	720
May	31	744
June	30	720
July	31	744
August	31	744
September	30	720
October	31	744
November	30	720
December	31	744
 
