Problem #01 Loop Practice (10 points)
Write a program which asks the user for two integers a and b. Display the following output.
• The sum of all even numbers between a and b.
• The product of all numbers between a and b.
• The sum of all squares between a and b.
• All powers of 2 from a to b i.e. 2a
, …, 2b (not the sum, just list the powers).


Problem #02 HW06P04 Rewrite With Loops (10 points)
Rewrite HW06P04 using loops. Your LOC (lines of code) should be significantly less in the rewrite when
compared to the original. In top of your code, add a comment with the total LOC from the first version and the
total LOC from the second version.



Problem 03: Mean and Standard Deviation (15 points)
Write a program which reads in an unknown amount of input and computes the mean and standard deviation of
the input. The formula for standard deviation is given below:
Input Validation: All numbers must be positive, -1 can be the only negative number used to stop the input.
Sample Output 1:
Enter positive numbers (-1 to end input): 3.5 8 3.4 2.78 9 10 3.375 -1
Mean: 5.722142857142857
Deviation: 3.1285937431254656
Sample Output 2:
Enter positive numbers (-1 to end input): 98.45 34.75 2.87 100.45 45.78
76.888 91.34 843.9043 12.455 -1
Mean: 145.2097
Deviation: 264.5528904493108




Problem 04: Approximating PI (15 points)
Using the following series:
Approximate PI for i = 10000, 20000, 30000, ... , 100000
NOTE: The series starts from i = 1 not i = 0;
NOTE: Your program must calculate PI using the above formula and loops! If you simply print out the given
solution without calculating it, you will get no credit for this problem.
Requirement: You can only use 1 loop to solve this problem.
Sample Output:
when i == 10000, PI = 3.1414926535900345
when i == 20000, PI = 3.1415426535898248
when i == 30000, PI = 3.141559320256462
when i == 40000, PI = 3.1415676535897985
when i == 50000, PI = 3.1415726535897814
when i == 60000, PI = 3.141575986923102
when i == 70000, PI = 3.141578367875482
when i == 80000, PI = 3.1415801535897496
when i == 90000, PI = 3.1415815424786238
when i == 100000, PI = 3.1415826535897198




Problem #05 Binary Number Converter (20 points)
Write a program which will convert a binary number to decimal, or covert a decimal number to binary. You will
present a menu to the user with the following options: (1. Convert Binary to Decimal, 2. Convert Decimal to
Binary, 3. Exit the program.).
For option 1, you will ask the user for a string of 0's and 1's and you will need to take this string and convert it
from the binary number that it represents, to the decimal value.
For option 2 you will ask the user for a decimal (base 10) number and convert the number to a binary number.
Requirements:
• You are NOT allowed to use any built in Java methods to do the conversions. You must use loops to
mathematically calculate the conversions.
• Your program must loop continuously until the user chooses to exit.
• You must validate the menu choice, and if the user chooses an incorrect menu option, display an error
message and allow them to try again.
Sample Output:
--------------------------------
| Binary Number Converter |
--------------------------------
| 1. Convert Binary to Decimal |
| 2. Convert Decimal to Binary |
| 3. Exit the Program |
--------------------------------
Enter your menu choice (1 - 3): 1
Enter the binary string: 10111111100011010000
10111111100011010000 in decimal is 784592
--------------------------------
| Binary Number Converter |
--------------------------------
| 1. Convert Binary to Decimal |
| 2. Convert Decimal to Binary |
| 3. Exit the Program |
--------------------------------
Enter your menu choice (1 - 3): 2
Enter the decimal number: 4567876543456789876
4567876543456789876 in binary is:
11111101100100010110111000001110111110100101001100010101110100
